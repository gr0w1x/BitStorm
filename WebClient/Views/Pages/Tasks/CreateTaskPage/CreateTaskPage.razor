@page "/tasks/create"

@using Microsoft.AspNetCore.Components.Forms
@using WebClient.Views.Components
@using WebClient.Views.Components.InputWrapper
@using WebClient.Views.Components.OneLineInput
@using WebClient.Views.Components.NumberInput
@using WebClient.Views.Components.SelectInput
@using WebClient.Views.Components.Button
@using WebClient.Views.Components.CircleSpinner
@using WebClient.Views.Pages.Tasks.TaskFormTemplate
@using WebClient.Views.Components.MarkdownEditor
@using WebClient.Store.Pages.CreateTaskPage

@inherits TaskFormTemplateBase<CreateTaskPageState, CreateTaskDtoWithTagsSeparated>

<PageTitle>BitStorm - Create Task</PageTitle>

<TaskFormTemplate
    TState="CreateTaskPageState"
    Context="@_context"
    State="@ComponentState.Value"
    CanSubmit="@CanSubmit"
    OnSubmit="@OnSubmit">
    <Title>Create Task</Title>
    <Inputs>
        <InputWrapper Title="Title" For="@(() => _dto.Title)">
            <OneLineInput
                id="title"
                placeholder="Type title ..."
                disabled="@(!CanEdit)"
                @bind-Value="_dto.Title" />
        </InputWrapper>
        <InputWrapper Title="Suggested level" For="@(() => _dto.SuggestedLevel)">
            <NumberInput
                id="suggested-level"
                step="1" min="1" max="9"
                disabled="@(!CanEdit)"
                @bind-Value="_dto.SuggestedLevel" />
        </InputWrapper>
        <InputWrapper Title="Tags (separated by comma)" For="@(() => _dto.TagsSeparated)">
            <OneLineInput
                id="tags-separated"
                placeholder="problem, math, algorithms, ..."
                disabled="@(!CanEdit)"
                @bind-Value="_dto.TagsSeparated" />
        </InputWrapper>
        <InputWrapper Title="Visibility" For="@(() => _dto.Visibility)">
            <SelectInput
                id="visibility"
                disabled="@(!CanEdit)"
                @bind-Value="_dto.Visibility"
                TItem="@TaskVisibility"
                Items="@Visibilities" />
        </InputWrapper>
    </Inputs>
    <Markdown>
        <InputWrapper Title="Description" For="@(() => _dto.Description)">
            <MarkdownEditor
                Placeholder="Type description..."
                @bind-Value="_dto.Description" />
        </InputWrapper>
    </Markdown>
    <SubmitButtonContent>
        CREATE
    </SubmitButtonContent>
</TaskFormTemplate>

@code {
    TaskVisibility[] Visibilities => Enum.GetValues<TaskVisibility>();
}
